# First 6 lines assign random number to 6 registers. 
# Next 26 lines test ORI, ANDI, XORI with random pairs of first 6 registers
# The output registers are compared to the register values in MIPS interpreter
# Next 26 lines are in the form LOGICAL $n, $(n-1), $(n-2). This will test for MEM/WB and EX/MEM data hazards INDEPENDENTLY
# Register outputs are checked with MIPS interpreter
# Next 26 lines are in the form LOGICAL $n, $n, $register(1-6). This will test for when MEM/WB and EX/MEM data hazards both occur, in which case the value from EX/MEM should be taken
# Register n is checked after all instructions are run
ADDIU $1, $zero, 10720
ADDIU $2, $zero, 22401
ADDIU $3, $zero, -21844
ADDIU $4, $zero, 16300
ADDIU $5, $zero, -19825
ADDIU $6, $zero, -16088
OR $7, $3, $4
NOR $8, $4, $2
XOR $9, $3, $4
OR $10, $1, $1
NOR $11, $1, $2
AND $12, $2, $1
OR $13, $4, $2
XOR $14, $4, $3
AND $15, $3, $2
XOR $16, $1, $3
AND $17, $2, $3
AND $18, $1, $1
AND $19, $3, $3
XOR $20, $2, $3
AND $21, $3, $3
NOR $22, $1, $4
NOR $23, $4, $4
XOR $24, $1, $3
XOR $25, $2, $3
NOR $26, $1, $4
NOR $27, $2, $2
AND $28, $1, $1
AND $29, $1, $2
AND $30, $1, $1
NOR $31, $4, $4

OR $7, $6, $5
AND $8, $7, $6
XOR $9, $8, $7
OR $10, $9, $8
AND $11, $10, $9
AND $12, $11, $10
XOR $13, $12, $11
AND $14, $13, $12
NOR $15, $14, $13
OR $16, $15, $14
NOR $17, $16, $15
XOR $18, $17, $16
AND $19, $18, $17
OR $20, $19, $18
XOR $21, $20, $19
NOR $22, $21, $20
NOR $23, $22, $21
OR $24, $23, $22
NOR $25, $24, $23
AND $26, $25, $24
OR $27, $26, $25
NOR $28, $27, $26
XOR $29, $28, $27
OR $30, $29, $28
OR $31, $30, $29

XOR $5, $5, $4
AND $5, $5, $4
XOR $5, $5, $4
OR $5, $5, $2
NOR $5, $5, $2
OR $5, $5, $1
NOR $5, $5, $3
XOR $5, $5, $1
XOR $5, $5, $1
AND $5, $5, $1
OR $5, $5, $3
NOR $5, $5, $1
XOR $5, $5, $1
XOR $5, $5, $4
XOR $5, $5, $3
NOR $5, $5, $1
AND $5, $5, $3
XOR $5, $5, $1
OR $5, $5, $4
XOR $5, $5, $2
OR $5, $5, $1
XOR $5, $5, $3
OR $5, $5, $4
AND $5, $5, $1
XOR $5, $5, $1
